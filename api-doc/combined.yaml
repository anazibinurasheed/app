<-AUTHENTICATION->



Sign-Up:

User can register an account

post:/register

request:
{
    username
    email
    password
    confirm_password
}

response:
status:200



Google-Auth:

User can register using google auth

get:/auth/google

response:
status:200



Github-Auth:

User can register using github auth

get:/auth/github

response:
status:200



Login:

User can login using credentials

post:/login
request:
{
    email
    password 
}

response:
status:200










<-POSTS->


Create:

User can create a post.

post:/post/create

request:
{
    image
    title
    description
}

response:
status:201




Update:

User can update his post.

post:/post/update/{postID}

request:
{
    image
    title
    description
}

response:
status:201




Delete:

User can delete his post.

delete:/post/delete/{postID}

response:
status:200




Get-Post:

Displays a post.

get:/post/{postID}

response:
status:200
[{
    post_id
    image_url
    title
    description
}]




Comment:

Post comment on a particular post.

post:/post/comment/{postID}

request:
{
comment
}

response:
status:201




Get-Comments:

Retrieve all the comments of the post.

get:/post/comment/{postID}

response:
status:200
{
    [
        comment_id
        user_id
        comment
        created_at
    ],
}




Update-Comments:

Retrieve all the comments of the post.

put:/update/comment/{postID}

request:
{
    comment
}

response:
status:200




Like:

Like a post.

Post:/post/like/{postID}

response:
status:201




Un-Like:

Unlike a post.

Post:/post/unlike/{postID}

response:
status:200













<-PROFILE->



Add-Image:

User can add Profile picture.

post:/profile/add-image

request:
{
    image
}

response:
status:201




Remove-Image:

User can remove profile picture.

delete:/profile/remove-image

response:
status:200




Add-Bg-Image:

User can add background image.

post:/profile/bg-image

request:
{
    bg_image
}

response:
status:201




Remove-Bg-Image:

User can remove background image.

delete:/profile/remove-bg-image

response:
status:200




Add-Note:

User can add a note, that will highlight in the users profile.

post:/profile/add-note

request:    
{
    note
}

response:
status:201




Remove-Note:

User can remove note.

post:/profile/remove-note

response:
status:201




Register-Mentor:

Peoples who is willing to help others can register as mentor.
Mentors will be highlighted in the application.
Users can easily identify the mentors.

Mentor should need to provide required information to become a mentor.

post:/mentor/register

request:
{
    position
}

response:
status:201




Out-Mentor:

Remove mentor identity.

delete:/mentor/remove

response:
status:200




Search for user.

get:/profile/search{query}


response:
status:200
{
[
    user_id
    profile_img_url
    username
    note
],
}












<-WEBSOCKET->




Create-Group:

A user can create a group.

post:/group/create

request:
{
    image   
    group_name
    description

}
response:
 status:201




Delete-Group:

Created user can delete group.

delete:/group/delete/{group_id}

response:
status:200




Get-Chat-Types:

Will display available chat types from the server.

get:/group/chat-types

response:
status:200
{
    chat_type_id
    chat_type_name
}




Create-Chat-Section:

Create a chat section by provided chat_type_id.

post:group/create-chat
request:
{
    chat_name
    chat_type_id
}

response:
status:200




Get-Groups:

Fetch all the groups details and display to the user.

get:/group
status:200
response: 
{
    [
    group_id 
    group_name
    group_img_url
    ],
}




Get-Chat:

Fetch the available chat sections in a group.

get:/group/{group_id}

response:
status:200
[{
    chat_id
    chat_name

}]




Get-Messages:

Will display recent messages in that particular chat section.

ws:/group/{group_id}/{chat_id}

response:
status:200
[{
    user_id
    user_name
    user_img_url 
    message
    msg_type
    media[
        {
            media_id
            msg_id
            media_url
            type 
        }
    ] 
}]


Sent-Group-Message:


User can sent messages to chat sections.
ws:/group/{group_id}/{chat_id}

request:
{
    image
}
{
    message
    msg_type
}

response:
{
 status:201
}



    Create a Group: 
    
     Create a new group.

     POST /api/groups
    
    List Groups:
      
      Retrieve a list of all groups.

     GET /api/groups

    Group Details:
     
     GET /api/groups/{group_id}
     
      Retrieve details about a specific group.
    
    Join a Group: 
    
    Allow a user to join a group.

     POST /api/groups/{group_id}/join 
    
    Leave a Group
    
    Allow a user to leave a group.

     POST /api/groups/{group_id}/leave 
    
    Add Group Members:
    
    Add members to a group.

     POST /api/groups/{group_id}/add-members 
    
    Remove Group Members:

    Remove members from a group.

     POST /api/groups/{group_id}/remove-members 
    
    Create Group Chat:
    
    Create a new chat within a group.

     POST /api/groups/{group_id}/chats 
    
    List Group Chats:

    Retrieve a list of all chats within a group.
    
      GET /api/groups/{group_id}/chats 
    
    Group Chat Details:
    
     Retrieve details about a specific chat within a group.

      GET /api/groups/{group_id}/chats/{chat_id}
    
    Send Group Message:
    
    Send a message in a group chat.

      POST /api/groups/{group_id}/chats/{chat_id}/messages 
    
    List Group Messages:
     
     Retrieve a list of messages in a group.

      GET /api/groups/{group_id}/chats/{chat_id}/messages